diff --git a/CMakeLists.txt b/CMakeLists.txt
index 431b56b0..4f23c2a2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,6 +4,9 @@
 
 cmake_minimum_required( VERSION 3.16.8 )
 
+set(CMAKE_VERBOSE_MAKEFILE ON)
+
+
 # This will add compile option: -std=c++17
 set( CMAKE_CXX_STANDARD 17 )
 # Without this line, it will add -std=gnu++17 instead, which may have issues.
@@ -198,7 +201,7 @@ set_property( CACHE AMDGPU_TARGETS PROPERTY STRINGS all gfx803 gfx900 gfx906:xna
 # Sets the AMDGPU_TARGETS with backward compatiblity
 if(COMMAND rocm_check_target_ids)
   rocm_check_target_ids(target_list
-      TARGETS "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx1010;gfx1011;gfx1012;gfx1030"
+      TARGETS "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx1010;gfx1011;gfx1012;gfx1030;gfx1031"
   )
 else()
   # This section is deprecated. Please use rocm_check_target_ids for future use.
@@ -213,11 +216,14 @@ else()
     if(Tensile_LOGIC STREQUAL "aldebaran")
       # Temporary bypass: if logic aldebaran logic is selected, assume aldebaran compiler support exists
       # To be removed for ROCm 4.4
-      set(target_list "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx1010;gfx1011;gfx1012;gfx1030")
+      message("----------------- xnack target-list --------------")
+      set(target_list "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack+;gfx90a:xnack-;gfx1010;gfx1011;gfx1012;gfx1030;gfx1031")
     else()
-      set(target_list "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx1010;gfx1011;gfx1012;gfx1030")
+      message("----------------- non xnack target-list --------------")
+      set(target_list "gfx803;gfx900;gfx906:xnack-;gfx908:xnack-;gfx1010;gfx1011;gfx1012;gfx1030;gfx1031")
     endif()
   else()
+    message("----------------- OUCH, using an old target list --------------")
     set(target_list "gfx803;gfx900;gfx906;gfx908")
   endif()
 endif()
@@ -271,18 +277,18 @@ if(NOT SKIP_LIBRARY)
       set( Tensile_ROOT "${CMAKE_BINARY_DIR}/virtualenv/Lib/site-packages/Tensile" )
     endif()
 
-    include(virtualenv)
-    if (Tensile_TEST_LOCAL_PATH)
-      virtualenv_install(${Tensile_TEST_LOCAL_PATH})
-      message (STATUS "using local Tensile from ${Tensile_TEST_LOCAL_PATH}, copied to ${Tensile_ROOT}")
-    else()
-      # Use the virtual-env setup and download package from specified repot:
-      set( tensile_fork "ROCmSoftwarePlatform" CACHE STRING "Tensile fork to use" )
-      file (STRINGS "tensile_tag.txt" read_tensile_tag)
-      set( tensile_tag ${read_tensile_tag} CACHE STRING "Tensile tag to download" )
-      virtualenv_install("git+https://github.com/${tensile_fork}/Tensile.git@${tensile_tag}")
-      message (STATUS "using GIT Tensile fork=${tensile_fork} from branch=${tensile_tag}")
-    endif()
+    #include(virtualenv)
+    #if (Tensile_TEST_LOCAL_PATH)
+    #  virtualenv_install(${Tensile_TEST_LOCAL_PATH})
+    #  message (STATUS "using local Tensile from ${Tensile_TEST_LOCAL_PATH}, copied to ${Tensile_ROOT}")
+    #else()
+    #  # Use the virtual-env setup and download package from specified repot:
+    #  set( tensile_fork "ROCmSoftwarePlatform" CACHE STRING "Tensile fork to use" )
+    #  file (STRINGS "tensile_tag.txt" read_tensile_tag)
+    #  set( tensile_tag ${read_tensile_tag} CACHE STRING "Tensile tag to download" )
+    #  virtualenv_install("git+https://github.com/${tensile_fork}/Tensile.git@${tensile_tag}")
+    #  message (STATUS "using GIT Tensile fork=${tensile_fork} from branch=${tensile_tag}")
+    #endif()
     message(STATUS "Adding ${VIRTUALENV_HOME_DIR} to CMAKE_PREFIX_PATH")
     list(APPEND CMAKE_PREFIX_PATH ${VIRTUALENV_HOME_DIR})
     if (TENSILE_VERSION)
diff --git a/library/CMakeLists.txt b/library/CMakeLists.txt
index c8546d38..407d3b17 100755
--- a/library/CMakeLists.txt
+++ b/library/CMakeLists.txt
@@ -2,6 +2,9 @@
 # Copyright 2016-2021 Advanced Micro Devices, Inc.
 # ########################################################################
 
+set(CMAKE_VERBOSE_MAKEFILE ON)
+
+
 # The following helper functions wrap common cmake functions.  They are
 # used to cope with a few wierdnesses of hipcc/nvcc.
 # ########################################################################
diff --git a/library/src/CMakeLists.txt b/library/src/CMakeLists.txt
index 4f5e4572..4a1feaf8 100755
--- a/library/src/CMakeLists.txt
+++ b/library/src/CMakeLists.txt
@@ -2,6 +2,8 @@
 # Copyright 2016-2021 Advanced Micro Devices, Inc.
 # ########################################################################
 
+set(CMAKE_VERBOSE_MAKEFILE ON)
+
 # ########################################################################
 # A helper function to prefix a source list of files with a common path into a new list (non-destructive)
 # ########################################################################
@@ -511,7 +513,7 @@ endif( )
 # Installation
 
 # Force installation of .f90 module file
-rocm_install(FILES "../include/rocblas_module.f90"
+rocm_install_targets(FILES "../include/rocblas_module.f90"
         DESTINATION "rocblas/include"
 )
 
@@ -534,7 +536,7 @@ if( BUILD_WITH_TENSILE )
   else()
     set( ROCBLAS_TENSILE_LIBRARY_DIR "\${CPACK_PACKAGING_INSTALL_PREFIX}rocblas/lib" CACHE PATH "path to tensile library" )
   endif()
-  rocm_install(
+  rocm_install_targets(
     DIRECTORY ${CMAKE_BINARY_DIR}/Tensile/library
     DESTINATION ${ROCBLAS_TENSILE_LIBRARY_DIR}
     COMPONENT Unspecified)
