diff --git a/CMakeLists.txt b/CMakeLists.txt
index a531e4a..ad4842c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -152,7 +152,7 @@ endif( )
 
 # Use target ID syntax if supported for AMDGPU_TARGETS
 rocm_check_target_ids(DEFAULT_AMDGPU_TARGETS
-  TARGETS "gfx803;gfx900:xnack-;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack-;gfx90a:xnack+;gfx1030")
+  TARGETS "gfx803;gfx900:xnack-;gfx906:xnack-;gfx908:xnack-;gfx90a:xnack-;gfx90a:xnack+;gfx1030;gfx1031")
 set(AMDGPU_TARGETS "${DEFAULT_AMDGPU_TARGETS}" CACHE STRING "List of specific machine types for library to target")
 
 # HIP is required - library and clients use HIP to access the device
diff --git a/library/src/include/tree_node_3D.h b/library/src/include/tree_node_3D.h
index 363dfba..eb96cc1 100644
--- a/library/src/include/tree_node_3D.h
+++ b/library/src/include/tree_node_3D.h
@@ -185,7 +185,8 @@ public:
         // benefits only some architectures
         if(is_diagonal_sbrc_3D_length(length.front()) && is_cube_size(length)
            && (is_device_gcn_arch(deviceProp, "gfx906")
-               || is_device_gcn_arch(deviceProp, "gfx1030")))
+               || is_device_gcn_arch(deviceProp, "gfx1030")
+               || is_device_gcn_arch(deviceProp, "gfx1031")))
             return DIAGONAL;
         if(alignment_dimension % blockWidth == 0)
             return TILE_ALIGNED;
diff --git a/library/src/tree_node_1D.cpp b/library/src/tree_node_1D.cpp
index f898e22..5900a3e 100644
--- a/library/src/tree_node_1D.cpp
+++ b/library/src/tree_node_1D.cpp
@@ -890,7 +890,8 @@ bool SBCCNode::KernelCheck()
     bool res = LeafNode::KernelCheck();
 
     // for Navi, Haven't tested all.
-    if(is_device_gcn_arch(deviceProp, "gfx1030"))
+    if(is_device_gcn_arch(deviceProp, "gfx1030") ||
+       is_device_gcn_arch(deviceProp, "gfx1031"))
     {
         if((length[0] != 64) && (length[0] != 81) && (length[0] != 200) && (length[0] != 100)
            && (length[0] != 168))
